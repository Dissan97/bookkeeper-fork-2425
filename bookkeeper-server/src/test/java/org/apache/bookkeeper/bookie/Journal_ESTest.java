/*
 * This file was automatically generated by EvoSuite
 * Thu Jun 26 12:56:42 GMT 2025
 */

package org.apache.bookkeeper.bookie;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.netty.buffer.ByteBuf;
import io.netty.buffer.ByteBufAllocator;
import io.netty.buffer.PooledByteBufAllocator;
import io.netty.buffer.UnpooledByteBufAllocator;
import io.prometheus.client.CollectorRegistry;
import java.io.File;
import java.time.ZoneId;
import java.util.List;
import java.util.Map;
import org.apache.bookkeeper.bookie.BookieImpl;
import org.apache.bookkeeper.bookie.Journal;
import org.apache.bookkeeper.bookie.JournalAliveListener;
import org.apache.bookkeeper.bookie.JournalChannel;
import org.apache.bookkeeper.bookie.LedgerDirsManager;
import org.apache.bookkeeper.conf.ServerConfiguration;
import org.apache.bookkeeper.stats.CachingStatsLogger;
import org.apache.bookkeeper.stats.NullStatsLogger;
import org.apache.bookkeeper.stats.StatsLogger;
import org.apache.bookkeeper.stats.prometheus.PrometheusMetricsProvider;
import org.apache.bookkeeper.stats.prometheus.ScopeContext;
import org.apache.bookkeeper.stats.prometheus.ThreadScopedDataSketchesStatsLogger;
import org.apache.bookkeeper.stats.prometheus.ThreadScopedLongAdderCounter;
import org.apache.bookkeeper.util.DiskChecker;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = false, resetStaticState = true, separateClassLoader = true)
public class Journal_ESTest extends Journal_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Failed to verify host address: {}");
      JournalChannel journalChannel0 = new JournalChannel(mockFile0, 1722L);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      serverConfiguration0.setMaxBackupJournals(5);
      NullStatsLogger nullStatsLogger0 = new NullStatsLogger();
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(true);
      JournalAliveListener journalAliveListener0 = mock(JournalAliveListener.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        Journal.newJournal((-1266), (File) null, serverConfiguration0, (LedgerDirsManager) null, nullStatsLogger0, unpooledByteBufAllocator0, journalAliveListener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 'journalMaxBackups' doesn't map to an Integer object
         //
         verifyException("org.apache.commons.configuration.AbstractConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      PooledByteBufAllocator pooledByteBufAllocator0 = PooledByteBufAllocator.DEFAULT;
      MockFile mockFile0 = new MockFile("limitStatsLogging");
      DiskChecker diskChecker0 = new DiskChecker(0.75F, 0.75F);
      File[] fileArray0 = new File[0];
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, diskChecker0);
      PrometheusMetricsProvider prometheusMetricsProvider0 = new PrometheusMetricsProvider();
      StatsLogger statsLogger0 = prometheusMetricsProvider0.getStatsLogger("ignoreLocalNodeInPlacementPolicy");
      JournalAliveListener journalAliveListener0 = mock(JournalAliveListener.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        Journal.newJournal(5, mockFile0, serverConfiguration0, ledgerDirsManager0, statsLogger0, pooledByteBufAllocator0, journalAliveListener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: java.lang.ClassNotFoundException: java.lang.String@0000000038
         //
         verifyException("org.apache.bookkeeper.bookie.Journal", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        Journal.listJournalIds((File) null, (Journal.JournalIdFilter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bookkeeper.bookie.Journal", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      ServerConfiguration serverConfiguration1 = serverConfiguration0.setMaxJournalSizeMB(5);
      PrometheusMetricsProvider prometheusMetricsProvider0 = new PrometheusMetricsProvider();
      StatsLogger statsLogger0 = prometheusMetricsProvider0.getStatsLogger("{Dq,x5/H_%@fLc<?H");
      CachingStatsLogger cachingStatsLogger0 = new CachingStatsLogger(statsLogger0);
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(true);
      JournalAliveListener journalAliveListener0 = mock(JournalAliveListener.class, new ViolatedAssumptionAnswer());
      Journal journal0 = null;
      try {
        journal0 = new Journal(403, mockFile0, serverConfiguration1, (LedgerDirsManager) null, cachingStatsLogger0, unpooledByteBufAllocator0, journalAliveListener0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 'journalMaxSizeMB' doesn't map to a Long object
         //
         verifyException("org.apache.commons.configuration.AbstractConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      MockFile mockFile0 = new MockFile("permittedStartupUsers");
      File[] fileArray0 = new File[1];
      fileArray0[0] = (File) mockFile0;
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, (DiskChecker) null);
      NullStatsLogger nullStatsLogger0 = new NullStatsLogger();
      PooledByteBufAllocator pooledByteBufAllocator0 = new PooledByteBufAllocator();
      Journal journal0 = null;
      try {
        journal0 = new Journal(1411, mockFile0, serverConfiguration0, ledgerDirsManager0, nullStatsLogger0, pooledByteBufAllocator0, (JournalAliveListener) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: java.lang.ClassNotFoundException: java.lang.String@0000000133
         //
         verifyException("org.apache.bookkeeper.bookie.Journal", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      serverConfiguration0.setMaxBackupJournals(5);
      CollectorRegistry collectorRegistry0 = new CollectorRegistry();
      PrometheusMetricsProvider prometheusMetricsProvider0 = new PrometheusMetricsProvider(collectorRegistry0);
      StatsLogger statsLogger0 = prometheusMetricsProvider0.getStatsLogger("");
      PooledByteBufAllocator pooledByteBufAllocator0 = PooledByteBufAllocator.DEFAULT;
      Journal journal0 = null;
      try {
        journal0 = new Journal(2, (File) null, serverConfiguration0, (LedgerDirsManager) null, statsLogger0, pooledByteBufAllocator0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 'journalMaxBackups' doesn't map to an Integer object
         //
         verifyException("org.apache.commons.configuration.AbstractConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockFile mockFile0 = new MockFile("h[~:_M.,fIpX]ZKI");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      File[] fileArray0 = new File[1];
      fileArray0[0] = (File) mockFile0;
      NullStatsLogger nullStatsLogger0 = NullStatsLogger.INSTANCE;
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, (DiskChecker) null, nullStatsLogger0);
      Journal journal0 = null;
      try {
        journal0 = new Journal((-2507), mockFile0, serverConfiguration0, ledgerDirsManager0, nullStatsLogger0, (ByteBufAllocator) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: java.lang.ClassNotFoundException: java.lang.String@0000000026
         //
         verifyException("org.apache.bookkeeper.bookie.Journal", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      MockFile mockFile0 = new MockFile("ignoreLocalNodeInPlacementPolicy");
      PooledByteBufAllocator pooledByteBufAllocator0 = PooledByteBufAllocator.DEFAULT;
      Journal journal0 = null;
      try {
        journal0 = new Journal((-2838), mockFile0, serverConfiguration0, (LedgerDirsManager) null, (StatsLogger) null, pooledByteBufAllocator0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bookkeeper.bookie.Journal", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      ServerConfiguration serverConfiguration1 = serverConfiguration0.setMaxJournalSizeMB(2000000L);
      Journal journal0 = null;
      try {
        journal0 = new Journal(1, (File) null, serverConfiguration1, (LedgerDirsManager) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 'journalMaxSizeMB' doesn't map to a Long object
         //
         verifyException("org.apache.commons.configuration.AbstractConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockFile mockFile0 = new MockFile("prometheusStatsHttpAddress");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "org.apache.bookkeeper.conf.readsystemproperties";
      stringArray0[2] = "minNumRacksPerWriteQuorum";
      ServerConfiguration serverConfiguration1 = serverConfiguration0.setJournalDirsName(stringArray0);
      Journal journal0 = null;
      try {
        journal0 = new Journal(60, mockFile0, serverConfiguration1, (LedgerDirsManager) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bookkeeper.bookie.Journal$LastLogMark", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      MockFile mockFile0 = new MockFile("desiredNumZonesPerWriteQuorum", "desiredNumZonesPerWriteQuorum");
      File[] fileArray0 = new File[1];
      serverConfiguration0.setJournalFlushWhenQueueEmpty(true);
      fileArray0[0] = (File) mockFile0;
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, (DiskChecker) null);
      Journal journal0 = null;
      try {
        journal0 = new Journal(3, mockFile0, serverConfiguration0, ledgerDirsManager0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: java.lang.ClassNotFoundException: java.lang.String@0000000026
         //
         verifyException("org.apache.bookkeeper.bookie.Journal", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MockFile mockFile0 = new MockFile("org.apache.log4j.Priority", "org.apache.bookkeeper.bookie.Journal$ForceWriteRequest");
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      serverConfiguration0.setJournalMaxGroupWaitMSec((-354L));
      Journal journal0 = null;
      try {
        journal0 = new Journal(8, mockFile0, serverConfiguration0, (LedgerDirsManager) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bookkeeper.bookie.Journal$LastLogMark", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      MockFile mockFile0 = new MockFile("enforceStrictZoneawarePlacement");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("enforceStrictZoneawarePlacement/current/lastMark");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "enforceStrictZoneawarePlacement");
      File[] fileArray0 = new File[2];
      fileArray0[0] = (File) mockFile0;
      fileArray0[1] = (File) mockFile0;
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, (DiskChecker) null);
      Journal journal0 = null;
      try {
        journal0 = new Journal(3, fileArray0[1], serverConfiguration0, ledgerDirsManager0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: java.lang.ClassNotFoundException: java.lang.String@0000000026
         //
         verifyException("org.apache.bookkeeper.bookie.Journal", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      MockFile mockFile0 = new MockFile("enforceStrictZoneawarePlacement");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("enforceStrictZoneawarePlacement/current/lastMark");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "fa:]9 yXi");
      File[] fileArray0 = new File[2];
      fileArray0[0] = (File) mockFile0;
      fileArray0[1] = (File) mockFile0;
      LedgerDirsManager ledgerDirsManager0 = new LedgerDirsManager(serverConfiguration0, fileArray0, (DiskChecker) null);
      Journal journal0 = null;
      try {
        journal0 = new Journal(3, fileArray0[1], serverConfiguration0, ledgerDirsManager0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: java.lang.ClassNotFoundException: java.lang.String@0000000026
         //
         verifyException("org.apache.bookkeeper.bookie.Journal", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockFile mockFile0 = new MockFile("minNumRacksPerWriteQuorum", "rage");
      MockFile.createTempFile("minNumZonesPerWriteQuorum", ".txn", (File) mockFile0);
      // Undeclared exception!
      try { 
        Journal.listJournalIds(mockFile0, (Journal.JournalIdFilter) null);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"minNumZonesPerWriteQuorum0\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      List<Long> list0 = Journal.listJournalIds(mockFile0, (Journal.JournalIdFilter) null);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      List<Long> list0 = Journal.listJournalIds(mockFile0, (Journal.JournalIdFilter) null);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MockFile mockFile0 = new MockFile("7$?Z:5");
      List<Long> list0 = Journal.listJournalIds(mockFile0, (Journal.JournalIdFilter) null);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      MockFile mockFile0 = new MockFile("minNumRacksPerWriteQuorum");
      PooledByteBufAllocator pooledByteBufAllocator0 = PooledByteBufAllocator.DEFAULT;
      Journal journal0 = null;
      try {
        journal0 = new Journal(4, mockFile0, serverConfiguration0, (LedgerDirsManager) null, (StatsLogger) null, pooledByteBufAllocator0, (JournalAliveListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bookkeeper.bookie.Journal", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ServerConfiguration serverConfiguration0 = new ServerConfiguration();
      PooledByteBufAllocator pooledByteBufAllocator0 = new PooledByteBufAllocator();
      // Undeclared exception!
      try { 
        Journal.newJournal(4, (File) null, serverConfiguration0, (LedgerDirsManager) null, (StatsLogger) null, pooledByteBufAllocator0, (JournalAliveListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bookkeeper.bookie.Journal", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PrometheusMetricsProvider prometheusMetricsProvider0 = new PrometheusMetricsProvider();
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      ScopeContext scopeContext0 = new ScopeContext("prometheusStatsHttpAddress", map0);
      ThreadScopedLongAdderCounter threadScopedLongAdderCounter0 = new ThreadScopedLongAdderCounter(prometheusMetricsProvider0, scopeContext0, map0);
      BookieImpl.NopWriteCallback bookieImpl_NopWriteCallback0 = new BookieImpl.NopWriteCallback();
      ThreadScopedDataSketchesStatsLogger threadScopedDataSketchesStatsLogger0 = new ThreadScopedDataSketchesStatsLogger(prometheusMetricsProvider0, scopeContext0, map0);
      Journal.QueueEntry journal_QueueEntry0 = Journal.QueueEntry.create((ByteBuf) null, true, 8000, (-1003L), bookieImpl_NopWriteCallback0, prometheusMetricsProvider0, 60, threadScopedDataSketchesStatsLogger0, threadScopedLongAdderCounter0);
      journal_QueueEntry0.run();
  }
}
